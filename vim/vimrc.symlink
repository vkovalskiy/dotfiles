set noswapfile

set ruler
set textwidth=70
set colorcolumn=71

autocmd vimenter * NERDTree

set guioptions=egmrt
set cpoptions+=$
set virtualedit=all
set keymap=russian-jcukenwin 
set iminsert=0
set imsearch=0
inoremap <S-F1> <C-^>
cnoremap <S-F1> <C-^>

" LESS Support
nnoremap ,m :w <BAR> !lessc % > %:t:r.css<CR><space>

" setlocal spell spelllang=ru_yo,en_us

" set wildmenu
" set wcm=
" menu SpellLang.RU_EN  :setlocal spell spelllang=ru,en
" menu SpellLang.off :setlocal nospell
" menu SpellLang.RU :setlocal spell spelllang=ru
" menu SpellLang.EN :setlocal spell spelllang=en
" map  :emenu SpellLang.
" map <F4> :emenu SpellLang.
" let g:languagetool_jar='/usr/local/Cellar/languagetool/1.3.1/libexec/LanguageTool.jar'
" let g:languagetool_lang=ru

filetype plugin on
filetype indent on

" http://vim.wikia.com/wiki/VimTip1386
" autocoplete hacks
set ofu=syntaxcomlete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType cssmnifunc=csscomplete#CompleteCSS set completeopt=longest,menuone
autocmd BufRead *.cson set ft=coffee
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

inoremap <expr> <C-n> pumvisible() ? '<C-n>' :
  \ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

inoremap <expr> <M-,> pumvisible() ? '<C-n>' :
  \ '<C-x><C-o><C-n><C-p><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

inoremap <C-Tab> <C-x><C-o>

" ----------------------------------------------------------------------------
"  Text Formatting
" ----------------------------------------------------------------------------

set autoindent             " automatic indent new lines
set smartindent            " be smart about it
inoremap # X<BS>#
set wrap                 " do wrap lines
set softtabstop=2          " yep, two
set shiftwidth=2           " ..
set tabstop=4
set expandtab              " expand tabs to spaces
set nosmarttab             " fuck tabs
set formatoptions+=n       " support for numbered/bullet lists
set textwidth=70           " wrap at 70 chars by default
set virtualedit=block      " allow virtual edit in visual block ..

" ----------------------------------------------------------------------------
"  Remapping
" ----------------------------------------------------------------------------

" lead with ,
let mapleader = ","

" js-beautify
nmap <leader>b :JSBeautify<cr>

" spell check this file
nmap <leader>s :setlocal spell spelllang=ru_yo,en_us

"Fuzzy Finders Buffers
nmap <C-b> :FufBuffer<cr>

"Fuzzy Finder's File
nmap <leader>o :FufFile<cr>

"Fuzzy Finder's Line
nmap <leader>l :FufLine<cr>

"CSSComb
nmap <leader>c :CSSComb<cr>

" CoffeeLint
nnoremap <leader>cx :CoffeeLint! <bar> cwindow<cr>

"Current file location in path
cmap <C-l> %:p:h:h/

" Locate current buffer in NERDTree
map <leader>r :NERDTreeFind<cr> 


" exit to normal mode with 'jj'
" inoremap jj <ESC>

vnoremap <C-INS> "+y<cr>
nnoremap <S-INS> "+P<cr>

map <F2> :source $MYVIMRC<CR>:echoe "Vimrc Reloaded!!!"<CR>


" reflow paragraph with Q in normal and visual mode
nnoremap Q gqap
vnoremap Q gq

" sane movement with wrap turned on
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
" not simple movements in order for FuzzyFinder navigation
" work corrctly
inoremap <C-Down> <C-o>gj
inoremap <C-Up> <C-o>gk

" line blocks movements up and down in all modes
nnoremap <C-j> :m+<CR>==
nnoremap <C-k> :m-2<CR>==
inoremap <C-j> <Esc>:m+<CR>==gi
inoremap <C-k> <Esc>:m-2<CR>==gi
vnoremap <C-j> :m'>+<CR>gv=gv
vnoremap <C-k> :m-2<CR>gv=gv

nnoremap <Tab> <C-W>w
nnoremap <S-Tab> <C-W>W
" ----------------------------------------------------------------------------
"  UI
" ----------------------------------------------------------------------------

set ruler                  " show the cursor position all the time
set noshowcmd              " don't display incomplete commands
set nolazyredraw           " turn off lazy redraw
set number                 " line numbers
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set ch=2                   " command line height
set backspace=2            " allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling


" ----------------------------------------------------------------------------
" Visual Cues
" ----------------------------------------------------------------------------

set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set ignorecase             " ignore case when searching
"set nohlsearch             " don't highlight searches
set visualbell             " shut the fuck up


" ---------------------------------------------------------------------------
"  Strip all trailing whitespace in file
" ---------------------------------------------------------------------------

function! StripWhitespace ()
    exec ':%s/ \+$//gc'
endfunction
map ,s :call StripWhitespace ()<CR>
